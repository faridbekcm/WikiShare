<?xml version="1.0"?>
<project name="WikiShare" basedir="." default="build">

  <property file="build.properties"/>
  <property name="src.dir" value="src"/>
  <property name="web.dir" value="war"/>
  <property name="dist.dir" value="dist"/>
  <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
  <property name="name" value="WikiShare"/>
  <property name="test.dir" value="test"/>


  <path id="master-classpath">
    <fileset dir="${web.dir}/WEB-INF/lib">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${build.dir}"/>
    <pathelement path="${test.dir}"/>
  </path>

  <target name="usage">
    <echo message=""/>
    <echo message="${name} build file"/>
    <echo message="-----------------------------------"/>
    <echo message=""/>
    <echo message="Available targets are:"/>
    <echo message=""/>
    <echo message="build --> Build the application"/>
    <echo message="test --> Test the application"/>
    <echo message="deploy --> Deploy application as directory on Tomcat"/>
    <echo message="deploywar --> Deploy application as a WAR file on Tomcat"/>
    <echo message="reload --> Reload application in Tomcat"/>
    <echo message=""/>
  </target>

  <target name="clean" description="Clean build directories">
    <delete includeEmptyDirs="true">
        <fileset dir="${build.dir}" includes="**/*"/>
    </delete>
  </target>
  
  <target name="cleandist" description="Clean distribution">
    <delete includeEmptyDirs="true">
        <fileset dir="${dist.dir}" includes="**/*"/>
    </delete>
  </target>
  
  <target name="build" depends="clean" description="Compile main source tree java files">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
      deprecation="false" optimize="false" failonerror="true">
      <src path="${src.dir}"/>
      <classpath refid="master-classpath"/>
    </javac>
    <copy todir="${build.dir}">
        <fileset dir="${src.dir}">
            <include name="**/*.properties"/>
            <include name="**/*.xml"/>
        </fileset>
    </copy>
  </target>

  <target name="deploy" depends="build" description="Deploy application">
    <copy todir="${deploy.path}/${name}" preservelastmodified="true">
      <fileset dir="${web.dir}">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <!--antcall target="reload"/-->
  </target>

  <target name="buildwar" depends="build" description="Build application as a WAR file">
    <war destfile="${dist.dir}/${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
      <fileset dir="${web.dir}">
        <include name="**/*.*" />
      </fileset>
    </war>
  </target>

  <target name="deploywar" depends="buildwar" description="Deploy application as a WAR file">
    <copy todir="${deploy.path}" preservelastmodified="true">
      <fileset dir=".">
        <include name="*.war"/>
      </fileset>
    </copy>
  </target>

  <target name="undeploy" description="Un-Deploy application">
    <delete>
      <fileset dir="${deploy.path}/${name}">
        <include name="**/*.*"/>
      </fileset>
    </delete>
  </target>



  <target name="buildtests" depends="build" description="Compile test tree java files">
    <mkdir dir="${build.dir}"/>
    <!-- delete file="${build.dir}/com/amb/wikishare/app/HibernateFactory.class"/-->
    <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
      deprecation="false" optimize="false" failonerror="true">
      <src path="${test.dir}"/>
      <classpath refid="master-classpath"/>
    </javac>
  </target>

  <path id="test-classpath">
    <fileset dir="${web.dir}/WEB-INF/lib">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${build.dir}"/>
    <pathelement path="${test.dir}"/>
    <pathelement path="${web.dir}/WEB-INF/classes"/>
  </path>

  <target name="tests" depends="build, buildtests" description="Run tests">
    <junit printsummary="no" fork="false" haltonfailure="false"
      failureproperty="tests.failed" showoutput="true">
      <classpath refid="test-classpath"/>
      <formatter type="brief" usefile="false"/>
      <batchtest>
        <fileset dir="${build.dir}">
            <include name="**/*Tests.*"/>
        </fileset>
      </batchtest>
    </junit>

    <fail if="tests.failed">
      tests.failed=${tests.failed}
      ***********************************************************
      ***********************************************************
      **** One or more tests failed! Check the output ... ****
      ***********************************************************
      ***********************************************************
    </fail>
  </target>

  <!-- ============================================================== -->
  <!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
  <!-- ============================================================== -->
  <path id="catalina-ant-classpath">
    <!-- We need the Catalina jars for Tomcat -->
    <!-- * for other app servers - check the docs -->
    <fileset dir="${appserver.lib}">
      <include name="catalina-ant.jar"/>
    </fileset>
  </path>

  <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
    <classpath refid="catalina-ant-classpath"/>
  </taskdef>

  <target name="reload" description="Reload application in Tomcat">
    <reload url="${tomcat.manager.url}"
    username="${tomcat.manager.username}"
    password="${tomcat.manager.password}"
    path="/${name}"/>
  </target>

  <!-- End Tomcat tasks -->

</project>